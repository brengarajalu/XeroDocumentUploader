{"ast":null,"code":"var _jsxFileName = \"/Users/SwathiBala/Projects/XeroDocumentUploader/XeroDocumentUploader/ClientApp/src/components/FileUpload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectFileHandler = event => {\n      //1. define the array for the file type e.g. png, jpeg\n      const fileTypes = ['image/png', 'image/jpeg']; // 2. get the file type\n\n      let file = event.target.files;\n      console.log(`File ${file}`); // 3. the message for error if the file type of not matched\n\n      let errMessage = []; // 4. to check the file type to match with the fileTypes array iterate \n      // through the types array\n\n      if (fileTypes.every(extension => file[0].type != extension)) {\n        errMessage.push(`The file ${file.type} extension is not supported`);\n      } else {\n        this.setState({\n          selectedFile: file[0]\n        });\n      }\n    };\n\n    this.uploadHandler = event => {\n      // 1. the FormData object that contains the data to be posted to the \n      // WEB API\n      const formData = new FormData();\n      formData.append('file', this.state.selectedFile); // 2. post the file to the WEB API\n\n      axios.post(\"http://localhost:38790/api/FileUpload/Upload\", formData, {\n        onUploadProgress: progressEvent => {\n          this.setState({\n            progress: progressEvent.loaded / progressEvent.total * 100\n          });\n        }\n      }).then(response => {\n        this.setState({\n          status: `upload success ${response.data}`\n        });\n      }).catch(error => {\n        this.setState({\n          status: `upload failed ${error}`\n        });\n      });\n    };\n\n    this.state = {\n      selectedFile: '',\n      status: '',\n      progress: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"The File Upload DEMO\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Select File to Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.selectFileHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.uploadHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Upload\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, this.state.progress), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, this.state.status));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/SwathiBala/Projects/XeroDocumentUploader/XeroDocumentUploader/ClientApp/src/components/FileUpload.js"],"names":["React","Component","axios","FileUpload","constructor","props","selectFileHandler","event","fileTypes","file","target","files","console","log","errMessage","every","extension","type","push","setState","selectedFile","uploadHandler","formData","FormData","append","state","post","onUploadProgress","progressEvent","progress","loaded","total","then","response","status","data","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass FileUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedFile: '',\n            status: '',\n            progress: 0\n        }\n    }\n    selectFileHandler = (event) => {\n        //1. define the array for the file type e.g. png, jpeg\n        const fileTypes = ['image/png', 'image/jpeg'];\n\n        // 2. get the file type\n        let file = event.target.files;\n        console.log(`File ${file}`);\n        // 3. the message for error if the file type of not matched\n        let errMessage = [];\n        // 4. to check the file type to match with the fileTypes array iterate \n        // through the types array\n        if (fileTypes.every(extension => file[0].type != extension)) {\n            errMessage.push(`The file ${file.type} extension is not supported`);\n        } else {\n            this.setState({\n                selectedFile: file[0]\n            });\n        }\n    };\n    // method contain logic to upload file\n    uploadHandler = (event) => {\n        // 1. the FormData object that contains the data to be posted to the \n        // WEB API\n        const formData = new FormData();\n        formData.append('file', this.state.selectedFile);\n\n        // 2. post the file to the WEB API\n        axios.post(\"http://localhost:38790/api/FileUpload/Upload\", formData, {\n            onUploadProgress: progressEvent => {\n                this.setState({\n                    progress: (progressEvent.loaded / progressEvent.total * 100)\n                })\n            }\n        })\n            .then((response) => {\n                this.setState({ status: `upload success ${response.data}` });\n            })\n            .catch((error) => {\n                this.setState({ status: `upload failed ${error}` });\n            })\n    }\n    render() {\n        return (\n            <div>\n                <h2>The File Upload DEMO</h2>\n                <div>\n                    <label>Select File to Upload</label>\n                    <input type=\"file\" onChange={this.selectFileHandler} />\n                </div>\n                <hr />\n                <div>\n                    <button type=\"button\" onClick={this.uploadHandler}>Upload</button></div>\n                <hr />\n                <div>{this.state.progress}</div>\n                <br />\n                <div>{this.state.status}</div>\n            </div>\n        );\n    }\n}\n\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}